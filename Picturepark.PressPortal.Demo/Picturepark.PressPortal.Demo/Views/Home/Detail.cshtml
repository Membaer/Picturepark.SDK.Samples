@using Picturepark.PressPortal.Demo.Contracts;
@using Microsoft.AspNetCore.Mvc.Localization
@using Picturepark.SDK.V1.Contract

@inject IViewLocalizer Localizer

@model ContentItem<PressKits>

@*<script>
    //change og meta tags on detail view
    $(document).ready(function () {
        $("meta[property='og\\:title']").attr("content", $("#content-area .entry-title").html());
        $("meta[property='og\\:site_name']").attr("content", $("#content-area .entry-title").html());
        $("meta[property='og\\:description']").attr("content", $(".leadP").html());
        $("meta[property='og\\:image']").attr("content", $(".entry-content .et_pb_text_inner img").attr("src"));
        $("meta[property='og\\:url']").attr("content", window.location.href);
    });
</script>*@

<div class="breadcrumb primary-color">
    <a class="semi-link" asp-controller="Home" asp-action="Overview">
        <i class="material-icons">keyboard_backspace</i> @Localizer.GetString("Back")
    </a>
</div>

<div class="article-detail">
    <article>
        <h1 class="article-detail-title">@Model.Content.Headline.GetTranslation()</h1>
        <p class="article-detail-about">
            <span>
                @Localizer.GetString("By")

                <!--Link to author deactivated. This feature will come at a later stage-->
                @Model.Owner.FirstName @Model.Owner.LastName
                <!--            
                <a class="primary-color semi-link" href="#" title="Posts By @Model.Owner.FirstName @Model.Owner.LastName" rel="author">@Model.Owner.FirstName @Model.Owner.LastName</a>
                -->
            </span>
            <span>•</span>
            <span>@Model.Content.ReleaseDate.ToShortDateString()</span>
        </p>

        <p class="article-detail-lead">@Model.Content.Lead?.GetTranslation()</p>
        <br />
        <img class="detail-hero-image" src="/Home/ImageResized/@Model.Content.HeroImage.TargetId?width=750&height=600" />
        <br /><br />
        <div class="detail-body-text">
            <markdown>@Html.Raw(Model.Content.BodyText?.GetTranslation())</markdown>
        </div>

        <div id="download-wrapper">
            <h4>Downloads</h4>
            @foreach (var download in Model.Content.MediaDownloads)
            {
                <div class="download-item gradient-shadow primary-color">
                    <a class="semi-link" asp-area="" asp-controller="Home" asp-action="Embed" asp-route-id="@download.TargetId">
                        <i class="material-icons">cloud_download</i>
                        <img src="/Home/Thumbnail/@download.TargetId">
                        <div class="downlaod-text">
                            <p class="download-title">@download.LegendTitle?.GetTranslation()</p>
                            <p class="download-description">@download.LegendDescription?.GetTranslation()</p>
                        </div>
                        
                    </a>
                </div>
            }
        </div>
</article>
</div>